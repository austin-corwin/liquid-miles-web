directive @contentSourceMaps on QUERY

"""Represents a binary file in a space. An asset can be any file type."""
type Asset {
  contentType(locale: String): String
  contentfulMetadata: ContentfulMetadata!
  description(locale: String): String
  fileName(locale: String): String
  height(locale: String): Int
  linkedFrom(allowedLocales: [String]): AssetLinkingCollections
  size(locale: String): Int
  sys: Sys!
  title(locale: String): String
  url(locale: String, transform: ImageTransformOptions): String
  width(locale: String): Int
}

type AssetCollection {
  items: [Asset]!
  limit: Int!
  skip: Int!
  total: Int!
}

input AssetFilter {
  AND: [AssetFilter]
  OR: [AssetFilter]
  contentType: String
  contentType_contains: String
  contentType_exists: Boolean
  contentType_in: [String]
  contentType_not: String
  contentType_not_contains: String
  contentType_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  description: String
  description_contains: String
  description_exists: Boolean
  description_in: [String]
  description_not: String
  description_not_contains: String
  description_not_in: [String]
  fileName: String
  fileName_contains: String
  fileName_exists: Boolean
  fileName_in: [String]
  fileName_not: String
  fileName_not_contains: String
  fileName_not_in: [String]
  height: Int
  height_exists: Boolean
  height_gt: Int
  height_gte: Int
  height_in: [Int]
  height_lt: Int
  height_lte: Int
  height_not: Int
  height_not_in: [Int]
  size: Int
  size_exists: Boolean
  size_gt: Int
  size_gte: Int
  size_in: [Int]
  size_lt: Int
  size_lte: Int
  size_not: Int
  size_not_in: [Int]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
  url: String
  url_contains: String
  url_exists: Boolean
  url_in: [String]
  url_not: String
  url_not_contains: String
  url_not_in: [String]
  width: Int
  width_exists: Boolean
  width_gt: Int
  width_gte: Int
  width_in: [Int]
  width_lt: Int
  width_lte: Int
  width_not: Int
  width_not_in: [Int]
}

type AssetLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum AssetOrder {
  contentType_ASC
  contentType_DESC
  fileName_ASC
  fileName_DESC
  height_ASC
  height_DESC
  size_ASC
  size_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  url_ASC
  url_DESC
  width_ASC
  width_DESC
}

"""
Submissions using contact form feature. [See type definition](https://app.contentful.com/spaces/rpg7h631tvxf/content_types/contactFormEntries)
"""
type ContactFormEntries implements Entry & _Node {
  _id: ID!
  channel(locale: String): String
  contentfulMetadata: ContentfulMetadata!
  data(locale: String): JSON
  email(locale: String): String
  linkedFrom(allowedLocales: [String]): ContactFormEntriesLinkingCollections
  message(locale: String): String
  name(locale: String): String
  phone(locale: String): String
  sys: Sys!
  title(locale: String): String
}

type ContactFormEntriesCollection {
  items: [ContactFormEntries]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ContactFormEntriesFilter {
  AND: [ContactFormEntriesFilter]
  OR: [ContactFormEntriesFilter]
  channel: String
  channel_contains: String
  channel_exists: Boolean
  channel_in: [String]
  channel_not: String
  channel_not_contains: String
  channel_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  data_exists: Boolean
  email: String
  email_contains: String
  email_exists: Boolean
  email_in: [String]
  email_not: String
  email_not_contains: String
  email_not_in: [String]
  message: String
  message_contains: String
  message_exists: Boolean
  message_in: [String]
  message_not: String
  message_not_contains: String
  message_not_in: [String]
  name: String
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  phone: String
  phone_contains: String
  phone_exists: Boolean
  phone_in: [String]
  phone_not: String
  phone_not_contains: String
  phone_not_in: [String]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type ContactFormEntriesLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum ContactFormEntriesOrder {
  channel_ASC
  channel_DESC
  email_ASC
  email_DESC
  name_ASC
  name_DESC
  phone_ASC
  phone_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

"""
Submissions using contact form feature. [See type definition](https://app.contentful.com/spaces/rpg7h631tvxf/content_types/contactFormEntry)
"""
type ContactFormEntry implements Entry & _Node {
  _id: ID!
  channel(locale: String): String
  contentfulMetadata: ContentfulMetadata!
  data(locale: String): JSON
  email(locale: String): String
  linkedFrom(allowedLocales: [String]): ContactFormEntryLinkingCollections
  message(locale: String): String
  name(locale: String): String
  phone(locale: String): String
  sys: Sys!
  title(locale: String): String
}

type ContactFormEntryCollection {
  items: [ContactFormEntry]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ContactFormEntryFilter {
  AND: [ContactFormEntryFilter]
  OR: [ContactFormEntryFilter]
  channel: String
  channel_contains: String
  channel_exists: Boolean
  channel_in: [String]
  channel_not: String
  channel_not_contains: String
  channel_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  data_exists: Boolean
  email: String
  email_contains: String
  email_exists: Boolean
  email_in: [String]
  email_not: String
  email_not_contains: String
  email_not_in: [String]
  message: String
  message_contains: String
  message_exists: Boolean
  message_in: [String]
  message_not: String
  message_not_contains: String
  message_not_in: [String]
  name: String
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  phone: String
  phone_contains: String
  phone_exists: Boolean
  phone_in: [String]
  phone_not: String
  phone_not_contains: String
  phone_not_in: [String]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type ContactFormEntryLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum ContactFormEntryOrder {
  channel_ASC
  channel_DESC
  email_ASC
  email_DESC
  name_ASC
  name_DESC
  phone_ASC
  phone_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

type ContentfulMetadata {
  concepts: [TaxonomyConcept]!
  tags: [ContentfulTag]!
}

input ContentfulMetadataConceptsDescendantsFilter {
  id_contains_all: [String]
  id_contains_none: [String]
  id_contains_some: [String]
}

input ContentfulMetadataConceptsFilter {
  descendants: ContentfulMetadataConceptsDescendantsFilter
  id_contains_all: [String]
  id_contains_none: [String]
  id_contains_some: [String]
}

input ContentfulMetadataFilter {
  concepts: ContentfulMetadataConceptsFilter
  concepts_exists: Boolean
  tags: ContentfulMetadataTagsFilter
  tags_exists: Boolean
}

input ContentfulMetadataTagsFilter {
  id_contains_all: [String]
  id_contains_none: [String]
  id_contains_some: [String]
}

"""
Represents a tag entity for finding and organizing content easily.
      Find out more here: https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/content-tags
"""
type ContentfulTag {
  id: String
  name: String
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z,
    compliant with the 'date-time' format outlined in section 5.6 of
    the RFC 3339 profile of the ISO 8601 standard for representation
    of dates and times using the Gregorian calendar.
"""
scalar DateTime

"""
The 'Dimension' type represents dimensions as whole numeric values between `1` and `4000`.
"""
scalar Dimension

interface Entry {
  contentfulMetadata: ContentfulMetadata!
  sys: Sys!
}

type EntryCollection {
  items: [Entry]!
  limit: Int!
  skip: Int!
  total: Int!
}

input EntryFilter {
  AND: [EntryFilter]
  OR: [EntryFilter]
  contentfulMetadata: ContentfulMetadataFilter
  sys: SysFilter
}

enum EntryOrder {
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
Questions and answers [See type definition](https://app.contentful.com/spaces/rpg7h631tvxf/content_types/faq)
"""
type Faq implements Entry & _Node {
  _id: ID!
  content(locale: String): FaqContent
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): FaqLinkingCollections
  sys: Sys!
  title(locale: String): String
}

type FaqCollection {
  items: [Faq]!
  limit: Int!
  skip: Int!
  total: Int!
}

type FaqContent {
  json: JSON!
  links: FaqContentLinks!
}

type FaqContentAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type FaqContentEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type FaqContentLinks {
  assets: FaqContentAssets!
  entries: FaqContentEntries!
  resources: FaqContentResources!
}

type FaqContentResources {
  block: [FaqContentResourcesBlock!]!
  hyperlink: [FaqContentResourcesHyperlink!]!
  inline: [FaqContentResourcesInline!]!
}

type FaqContentResourcesBlock implements ResourceLink {
  sys: ResourceSys!
}

type FaqContentResourcesHyperlink implements ResourceLink {
  sys: ResourceSys!
}

type FaqContentResourcesInline implements ResourceLink {
  sys: ResourceSys!
}

input FaqFilter {
  AND: [FaqFilter]
  OR: [FaqFilter]
  content_contains: String
  content_exists: Boolean
  content_not_contains: String
  contentfulMetadata: ContentfulMetadataFilter
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type FaqLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  pageCollection(limit: Int = 100, locale: String, order: [FaqLinkingCollectionsPageCollectionOrder], preview: Boolean, skip: Int = 0): PageCollection
}

enum FaqLinkingCollectionsPageCollectionOrder {
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum FaqOrder {
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

"""The 'HexColor' type represents color in `rgb:ffffff` string format."""
scalar HexColor

enum ImageFormat {
  AVIF

  """JPG image format."""
  JPG

  """
  Progressive JPG format stores multiple passes of an image in progressively higher detail.
          When a progressive image is loading, the viewer will first see a lower quality pixelated version which
          will gradually improve in detail, until the image is fully downloaded. This is to display an image as
          early as possible to make the layout look as designed.
  """
  JPG_PROGRESSIVE

  """PNG image format"""
  PNG

  """
  8-bit PNG images support up to 256 colors and weigh less than the standard 24-bit PNG equivalent.
          The 8-bit PNG format is mostly used for simple images, such as icons or logos.
  """
  PNG8

  """WebP image format."""
  WEBP
}

enum ImageResizeFocus {
  """Focus the resizing on the bottom."""
  BOTTOM

  """Focus the resizing on the bottom left."""
  BOTTOM_LEFT

  """Focus the resizing on the bottom right."""
  BOTTOM_RIGHT

  """Focus the resizing on the center."""
  CENTER

  """Focus the resizing on the largest face."""
  FACE

  """Focus the resizing on the area containing all the faces."""
  FACES

  """Focus the resizing on the left."""
  LEFT

  """Focus the resizing on the right."""
  RIGHT

  """Focus the resizing on the top."""
  TOP

  """Focus the resizing on the top left."""
  TOP_LEFT

  """Focus the resizing on the top right."""
  TOP_RIGHT
}

enum ImageResizeStrategy {
  """
  Crops a part of the original image to fit into the specified dimensions.
  """
  CROP

  """
  Resizes the image to the specified dimensions, cropping the image if needed.
  """
  FILL

  """Resizes the image to fit into the specified dimensions."""
  FIT

  """
  Resizes the image to the specified dimensions, padding the image if needed.
          Uses desired background color as padding color.
  """
  PAD

  """
  Resizes the image to the specified dimensions, changing the original aspect ratio if needed.
  """
  SCALE

  """Creates a thumbnail from the image."""
  THUMB
}

input ImageTransformOptions {
  """
  Desired background color, used with corner radius or `PAD` resize strategy.
          Defaults to transparent (for `PNG`, `PNG8` and `WEBP`) or white (for `JPG` and `JPG_PROGRESSIVE`).
  """
  backgroundColor: HexColor

  """
  Desired corner radius in pixels.
          Results in an image with rounded corners (pass `-1` for a full circle/ellipse).
          Defaults to `0`. Uses desired background color as padding color,
          unless the format is `JPG` or `JPG_PROGRESSIVE` and resize strategy is `PAD`, then defaults to white.
  """
  cornerRadius: Int

  """Desired image format. Defaults to the original image format."""
  format: ImageFormat

  """Desired height in pixels. Defaults to the original image height."""
  height: Dimension

  """
  Desired quality of the image in percents.
          Used for `PNG8`, `JPG`, `JPG_PROGRESSIVE` and `WEBP` formats.
  """
  quality: Quality

  """Desired resize focus area. Defaults to `CENTER`."""
  resizeFocus: ImageResizeFocus

  """Desired resize strategy. Defaults to `FIT`."""
  resizeStrategy: ImageResizeStrategy

  """Desired width in pixels. Defaults to the original image width."""
  width: Dimension
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

"""
[See type definition](https://app.contentful.com/spaces/rpg7h631tvxf/content_types/link)
"""
type Link implements Entry & _Node {
  _id: ID!
  contentfulMetadata: ContentfulMetadata!
  label(locale: String): String
  linkedFrom(allowedLocales: [String]): LinkLinkingCollections
  requiresAuthentication(locale: String): Boolean
  sys: Sys!
  target(locale: String): String
  url(locale: String): String
}

type LinkCollection {
  items: [Link]!
  limit: Int!
  skip: Int!
  total: Int!
}

input LinkFilter {
  AND: [LinkFilter]
  OR: [LinkFilter]
  contentfulMetadata: ContentfulMetadataFilter
  label: String
  label_contains: String
  label_exists: Boolean
  label_in: [String]
  label_not: String
  label_not_contains: String
  label_not_in: [String]
  requiresAuthentication: Boolean
  requiresAuthentication_exists: Boolean
  requiresAuthentication_not: Boolean
  sys: SysFilter
  target: String
  target_contains: String
  target_exists: Boolean
  target_in: [String]
  target_not: String
  target_not_contains: String
  target_not_in: [String]
  url: String
  url_contains: String
  url_exists: Boolean
  url_in: [String]
  url_not: String
  url_not_contains: String
  url_not_in: [String]
}

type LinkLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  navMenusCollection(limit: Int = 100, locale: String, order: [LinkLinkingCollectionsNavMenusCollectionOrder], preview: Boolean, skip: Int = 0): NavMenusCollection
}

enum LinkLinkingCollectionsNavMenusCollectionOrder {
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum LinkOrder {
  label_ASC
  label_DESC
  requiresAuthentication_ASC
  requiresAuthentication_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  target_ASC
  target_DESC
  url_ASC
  url_DESC
}

"""
Navigation menus comprised of links or CTAs [See type definition](https://app.contentful.com/spaces/rpg7h631tvxf/content_types/navMenus)
"""
type NavMenus implements Entry & _Node {
  _id: ID!
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): NavMenusLinkingCollections
  linksCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0, where: NavMenusLinksFilter): NavMenusLinksCollection
  slug(locale: String): String
  sys: Sys!
  title(locale: String): String
}

type NavMenusCollection {
  items: [NavMenus]!
  limit: Int!
  skip: Int!
  total: Int!
}

input NavMenusFilter {
  AND: [NavMenusFilter]
  OR: [NavMenusFilter]
  contentfulMetadata: ContentfulMetadataFilter
  links: cflinksMultiTypeNestedFilter
  linksCollection_exists: Boolean
  slug: String
  slug_contains: String
  slug_exists: Boolean
  slug_in: [String]
  slug_not: String
  slug_not_contains: String
  slug_not_in: [String]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type NavMenusLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

type NavMenusLinksCollection {
  items: [NavMenusLinksItem]!
  limit: Int!
  skip: Int!
  total: Int!
}

input NavMenusLinksFilter {
  AND: [NavMenusLinksFilter]
  OR: [NavMenusLinksFilter]
  contentfulMetadata: ContentfulMetadataFilter
  sys: SysFilter
}

union NavMenusLinksItem = Link | Page | Race

enum NavMenusOrder {
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

"""
[See type definition](https://app.contentful.com/spaces/rpg7h631tvxf/content_types/page)
"""
type Page implements Entry & _Node {
  _id: ID!
  content(locale: String): PageContent
  contentfulMetadata: ContentfulMetadata!
  faqsCollection(limit: Int = 100, locale: String, order: [PageFaqsCollectionOrder], preview: Boolean, skip: Int = 0, where: FaqFilter): PageFaqsCollection
  linkedFrom(allowedLocales: [String]): PageLinkingCollections
  slug(locale: String): String
  subtitle(locale: String): PageSubtitle
  sys: Sys!
  title(locale: String): String
}

type PageCollection {
  items: [Page]!
  limit: Int!
  skip: Int!
  total: Int!
}

type PageContent {
  json: JSON!
  links: PageContentLinks!
}

type PageContentAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type PageContentEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type PageContentLinks {
  assets: PageContentAssets!
  entries: PageContentEntries!
  resources: PageContentResources!
}

type PageContentResources {
  block: [PageContentResourcesBlock!]!
  hyperlink: [PageContentResourcesHyperlink!]!
  inline: [PageContentResourcesInline!]!
}

type PageContentResourcesBlock implements ResourceLink {
  sys: ResourceSys!
}

type PageContentResourcesHyperlink implements ResourceLink {
  sys: ResourceSys!
}

type PageContentResourcesInline implements ResourceLink {
  sys: ResourceSys!
}

type PageFaqsCollection {
  items: [Faq]!
  limit: Int!
  skip: Int!
  total: Int!
}

enum PageFaqsCollectionOrder {
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

input PageFilter {
  AND: [PageFilter]
  OR: [PageFilter]
  content_contains: String
  content_exists: Boolean
  content_not_contains: String
  contentfulMetadata: ContentfulMetadataFilter
  faqs: cfFaqNestedFilter
  faqsCollection_exists: Boolean
  slug: String
  slug_contains: String
  slug_exists: Boolean
  slug_in: [String]
  slug_not: String
  slug_not_contains: String
  slug_not_in: [String]
  subtitle_contains: String
  subtitle_exists: Boolean
  subtitle_not_contains: String
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type PageLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  navMenusCollection(limit: Int = 100, locale: String, order: [PageLinkingCollectionsNavMenusCollectionOrder], preview: Boolean, skip: Int = 0): NavMenusCollection
}

enum PageLinkingCollectionsNavMenusCollectionOrder {
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum PageOrder {
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

type PageSubtitle {
  json: JSON!
  links: PageSubtitleLinks!
}

type PageSubtitleAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type PageSubtitleEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type PageSubtitleLinks {
  assets: PageSubtitleAssets!
  entries: PageSubtitleEntries!
  resources: PageSubtitleResources!
}

type PageSubtitleResources {
  block: [PageSubtitleResourcesBlock!]!
  hyperlink: [PageSubtitleResourcesHyperlink!]!
  inline: [PageSubtitleResourcesInline!]!
}

type PageSubtitleResourcesBlock implements ResourceLink {
  sys: ResourceSys!
}

type PageSubtitleResourcesHyperlink implements ResourceLink {
  sys: ResourceSys!
}

type PageSubtitleResourcesInline implements ResourceLink {
  sys: ResourceSys!
}

"""
The 'Quality' type represents quality as whole numeric values between `1` and `100`.
"""
scalar Quality

type Query {
  _node(id: ID!, locale: String, preview: Boolean): _Node
  _nodes(ids: [ID!]!, locale: String, preview: Boolean): [_Node]!
  asset(id: String!, locale: String, preview: Boolean): Asset
  assetCollection(limit: Int = 100, locale: String, order: [AssetOrder], preview: Boolean, skip: Int = 0, where: AssetFilter): AssetCollection
  contactFormEntries(id: String!, locale: String, preview: Boolean): ContactFormEntries
  contactFormEntriesCollection(limit: Int = 100, locale: String, order: [ContactFormEntriesOrder], preview: Boolean, skip: Int = 0, where: ContactFormEntriesFilter): ContactFormEntriesCollection
  contactFormEntry(id: String!, locale: String, preview: Boolean): ContactFormEntry
  contactFormEntryCollection(limit: Int = 100, locale: String, order: [ContactFormEntryOrder], preview: Boolean, skip: Int = 0, where: ContactFormEntryFilter): ContactFormEntryCollection
  entryCollection(limit: Int = 100, locale: String, order: [EntryOrder], preview: Boolean, skip: Int = 0, where: EntryFilter): EntryCollection
  faq(id: String!, locale: String, preview: Boolean): Faq
  faqCollection(limit: Int = 100, locale: String, order: [FaqOrder], preview: Boolean, skip: Int = 0, where: FaqFilter): FaqCollection
  link(id: String!, locale: String, preview: Boolean): Link
  linkCollection(limit: Int = 100, locale: String, order: [LinkOrder], preview: Boolean, skip: Int = 0, where: LinkFilter): LinkCollection
  navMenus(id: String!, locale: String, preview: Boolean): NavMenus
  navMenusCollection(limit: Int = 100, locale: String, order: [NavMenusOrder], preview: Boolean, skip: Int = 0, where: NavMenusFilter): NavMenusCollection
  page(id: String!, locale: String, preview: Boolean): Page
  pageCollection(limit: Int = 100, locale: String, order: [PageOrder], preview: Boolean, skip: Int = 0, where: PageFilter): PageCollection
  race(id: String!, locale: String, preview: Boolean): Race
  raceCollection(limit: Int = 100, locale: String, order: [RaceOrder], preview: Boolean, skip: Int = 0, where: RaceFilter): RaceCollection
  user(id: String!, locale: String, preview: Boolean): User
  userCollection(limit: Int = 100, locale: String, order: [UserOrder], preview: Boolean, skip: Int = 0, where: UserFilter): UserCollection
}

"""
Individual races (years) [See type definition](https://app.contentful.com/spaces/rpg7h631tvxf/content_types/race)
"""
type Race implements Entry & _Node {
  _id: ID!
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): RaceLinkingCollections
  raceDate(locale: String): DateTime
  slug(locale: String): String
  sys: Sys!
  title(locale: String): String
}

type RaceCollection {
  items: [Race]!
  limit: Int!
  skip: Int!
  total: Int!
}

input RaceFilter {
  AND: [RaceFilter]
  OR: [RaceFilter]
  contentfulMetadata: ContentfulMetadataFilter
  raceDate: DateTime
  raceDate_exists: Boolean
  raceDate_gt: DateTime
  raceDate_gte: DateTime
  raceDate_in: [DateTime]
  raceDate_lt: DateTime
  raceDate_lte: DateTime
  raceDate_not: DateTime
  raceDate_not_in: [DateTime]
  slug: String
  slug_contains: String
  slug_exists: Boolean
  slug_in: [String]
  slug_not: String
  slug_not_contains: String
  slug_not_in: [String]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type RaceLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  navMenusCollection(limit: Int = 100, locale: String, order: [RaceLinkingCollectionsNavMenusCollectionOrder], preview: Boolean, skip: Int = 0): NavMenusCollection
}

enum RaceLinkingCollectionsNavMenusCollectionOrder {
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum RaceOrder {
  raceDate_ASC
  raceDate_DESC
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

interface ResourceLink {
  sys: ResourceSys!
}

type ResourceSys {
  linkType: String!
  urn: String!
}

type Sys {
  environmentId: String!
  firstPublishedAt: DateTime
  id: String!

  """The locale that was requested."""
  locale: String
  publishedAt: DateTime
  publishedVersion: Int
  spaceId: String!
}

input SysFilter {
  firstPublishedAt: DateTime
  firstPublishedAt_exists: Boolean
  firstPublishedAt_gt: DateTime
  firstPublishedAt_gte: DateTime
  firstPublishedAt_in: [DateTime]
  firstPublishedAt_lt: DateTime
  firstPublishedAt_lte: DateTime
  firstPublishedAt_not: DateTime
  firstPublishedAt_not_in: [DateTime]
  id: String
  id_contains: String
  id_exists: Boolean
  id_in: [String]
  id_not: String
  id_not_contains: String
  id_not_in: [String]
  publishedAt: DateTime
  publishedAt_exists: Boolean
  publishedAt_gt: DateTime
  publishedAt_gte: DateTime
  publishedAt_in: [DateTime]
  publishedAt_lt: DateTime
  publishedAt_lte: DateTime
  publishedAt_not: DateTime
  publishedAt_not_in: [DateTime]
  publishedVersion: Float
  publishedVersion_exists: Boolean
  publishedVersion_gt: Float
  publishedVersion_gte: Float
  publishedVersion_in: [Float]
  publishedVersion_lt: Float
  publishedVersion_lte: Float
  publishedVersion_not: Float
  publishedVersion_not_in: [Float]
}

"""
Represents a taxonomy concept entity for finding and organizing content easily.
        Find out more here: https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/content-concepts
"""
type TaxonomyConcept {
  id: String
}

"""
User data record paired with a Clerk user. [See type definition](https://app.contentful.com/spaces/rpg7h631tvxf/content_types/user)
"""
type User implements Entry & _Node {
  _id: ID!
  clerkId(locale: String): String
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): UserLinkingCollections
  name(locale: String): String
  role(locale: String): String
  sys: Sys!
}

type UserCollection {
  items: [User]!
  limit: Int!
  skip: Int!
  total: Int!
}

input UserFilter {
  AND: [UserFilter]
  OR: [UserFilter]
  clerkId: String
  clerkId_contains: String
  clerkId_exists: Boolean
  clerkId_in: [String]
  clerkId_not: String
  clerkId_not_contains: String
  clerkId_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  name: String
  name_contains: String
  name_exists: Boolean
  name_in: [String]
  name_not: String
  name_not_contains: String
  name_not_in: [String]
  role: String
  role_contains: String
  role_exists: Boolean
  role_in: [String]
  role_not: String
  role_not_contains: String
  role_not_in: [String]
  sys: SysFilter
}

type UserLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum UserOrder {
  clerkId_ASC
  clerkId_DESC
  name_ASC
  name_DESC
  role_ASC
  role_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

interface _Node {
  _id: ID!
}

input cfFaqNestedFilter {
  AND: [cfFaqNestedFilter]
  OR: [cfFaqNestedFilter]
  content_contains: String
  content_exists: Boolean
  content_not_contains: String
  contentfulMetadata: ContentfulMetadataFilter
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

input cflinksMultiTypeNestedFilter {
  AND: [cflinksMultiTypeNestedFilter]
  OR: [cflinksMultiTypeNestedFilter]
  contentfulMetadata: ContentfulMetadataFilter
  sys: SysFilter
}